AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  app

  Sample SAM Template for app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
# Globals:
#   Function:
#     Timeout: 3
#   Api:
#     EndpointConfiguration: REGIONAL
Parameters:
  AppStage:
    Type: String
    Default: api
    Description: API Gateway stage, used as a prefix for the endpoint URLs
    AllowedPattern: ^[A-Za-z]+$
    MaxLength: 10
    MinLength: 1
    ConstraintDescription: "1-10 Latin letters"
  UploadLimitInMb:
    Type: Number
    Default: 5
    Description: Maximum upload size in megabytes
    MinValue: 1
    MaxValue: 100
Resources:
  WebApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref AppStage
  UploadS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  ThumbnailsS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  ShowFormFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: user-form/
      Handler: show-form.lambdaHandler
      Runtime: nodejs12.x
      Policies:
        - S3FullAccessPolicy:
            BucketName: !Ref UploadS3Bucket
      Environment:
        Variables:
          UPLOAD_S3_BUCKET: !Ref UploadS3Bucket
          UPLOAD_LIMIT_IN_MB: !Ref UploadLimitInMb
      Events:
        ShowForm:
          Type: Api
          Properties:
            Path: /
            Method: get
            RestApiId: !Ref WebApi
  ConfirmUploadFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: user-form/
      Handler: confirm-upload.lambdaHandler
      Runtime: nodejs12.x
      Events:
        ConfirmForm:
          Type: Api
          Properties:
            Path: /confirm
            Method: get
            RestApiId: !Ref WebApi
      Environment:
        Variables:
          UPLOAD_S3_BUCKET: !Ref ThumbnailsS3Bucket
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref ThumbnailsS3Bucket
  ConvertFileFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: image-conversion/
      Handler: index.handler
      Runtime: nodejs12.x
      Events:
        FileUploaded:
          Type: S3
          Properties:
            Bucket: !Ref UploadS3Bucket
            Events: s3:ObjectCreated:*
      Timeout: 600
      Environment:
        Variables:
          OUTPUT_BUCKET: !Ref ThumbnailsS3Bucket
      Policies:
        - S3FullAccessPolicy:
            BucketName: !Ref ThumbnailsS3Bucket
  ConvertFunctionCanReadUploads:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ConvertFunctionCanReadUploads
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "s3:GetObject"
            Resource:
              - !Sub "${UploadS3Bucket.Arn}/*"
      Roles:
        - !Ref ConvertFileFunctionRole
  # ProcessFormFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     CodeUri: user-form/
  #     Handler: process-form.lambdaHandler
  #     Runtime: nodejs12.x
  #     Policies:
  #       - S3FullAccessPolicy:
  #           BucketName: !Ref UploadS3Bucket
  #     Environment:
  #       Variables:
  #         UPLOAD_S3_BUCKET: !Ref UploadS3Bucket
  #     Events:
  #       SubmitForm:
  #         Type: Api
  #         Properties:
  #           Path: /
  #           Method: post
  #           RestApiId: !Ref WebApi
  # HelloWorldFunction:
  #   Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
  #   Properties:
  #     CodeUri: hello-world/
  #     Handler: app.lambdaHandler
  #     Runtime: nodejs12.x
  #     AutoPublishAlias: live
  #     # DeploymentPreference:
  #     #   Type: Linear10PercentEvery1Minute
  #     #   Alarms:
  #     #     - !Ref HelloWorldErrors
  #     Architectures:
  #       - x86_64
  #     Events:
  #       HelloWorld:
  #         Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
  #         Properties:
  #           Path: /hello
  #           Method: get
  #           RestApiId: !Ref WebApi
  # SubmitForm:
  #   Type: Api
  #   Properties:
  #     Path: /hello
  #     Method: post
  #     RestApiId: !Ref WebApi
  # HelloWorldErrors:
  #   Type: AWS::CloudWatch::Alarm
  #   Properties:
  #     MetricName: Errors
  #     Statistic: Sum
  #     ComparisonOperator: GreaterThanThreshold
  #     Threshold: 5
  #     Period: 60
  #     EvaluationPeriods: 1
  #     TreatMissingData: notBreaching
  #     Namespace: "AWS/Lambda"
  #     Dimensions:
  #       - Name: FunctionName
  #         Value: !Ref HelloWorldFunction
Outputs:
  UserFormApi:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${WebApi}.execute-api.${AWS::Region}.amazonaws.com/${AppStage}/"
  UploadBucket:
    Description: "S3 Bucket for user information"
    Value: !Ref UploadS3Bucket
  ThumbnailsS3Bucket:
    Description: "S3 Bucket for thumbnails"
    Value: !Ref ThumbnailsS3Bucket
  # HelloWorldFunction:
  #   Description: "Form Submit Function ARN"
  #   Value: !GetAtt ShowFormFunction.Arn
  # HelloWorldFunctionIamRole:
  #   Description: "Implicit IAM Role created for Hello World function"
  #   Value: !GetAtt ShowFormFunctionRole.Arn
